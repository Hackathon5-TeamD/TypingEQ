# docker composerのバージョンの指定
version: "3.9"

services:
  flask:
    container_name: flask
    depends_on:
      db:
        # dbのヘルスチェックが終わってからappを起動させる
        condition: service_healthy
    build:
      context: .
      dockerfile: ./backend/flask_app/Dockerfile
    ports:
      - "5000:5000"
    expose:
      - "5000"
    volumes:
      - ./backend/flask_app/scripts:/var/www/scripts:cached
      - ./backend/flask_app/app:/var/www
      - ./gunicorn_socket:/tmp/gunicorn_socket/gunicorn_flask.sock
    working_dir: /var/www/scripts
    command: bash -c "./run.sh"
    environment:
      TZ: "Asia/Tokyo"
    env_file:
      - .env.dev
      
  db:
    container_name: mysql_db
    build:
      context: .
      dockerfile: ./backend/DB/Dockerfile
    restart: always
    tty: true
    expose:
      - "3306"
    volumes:
      - ./log/db:/var/log/mysql:cached
    environment:
      TZ: "Asia/Tokyo"
    env_file:
      - .env.dev
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u$$MYSQL_USER -p$$MYSQL_PASSWORD
      # ヘルスチェックのインターバルは10秒
      interval: 10s
      # タイムアウト時間は10秒
      timeout: 10s
      # リトライ回数は3回
      retries: 3
      # ヘルスチェックが失敗しても無視する時間は30秒
      start_period: 30s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    env_file:
      - .env.dev
    links:
      - db
    ports:
      - "4000:80"
    volumes:
      - ./phpmyadmin/sessions:/sessions
    
  web:
    container_name: NginX
    build:
      context: .
      dockerfile: ./web/Dockerfile-NginX
    ports:
      - "80:80"
    volumes:
      - ./front/React/build:/usr/share/nginx/html
      - ./web/conf:/etc/nginx/conf.d
      - ./gunicorn_socket:/tmp/gunicorn_socket/gunicorn_flask.sock
    links:
      - flask
    restart: always
    
volumes:
  socket: